@use "../variables";
@use "../mixins/borders" as bord;
@use "../mixins/neon" as neon;
@use "sass:map";
@use "sass:color";

//En bordes tambien incluyo el border-radius en este caso rounded
.border {
  --sci-border-opacity: 1;
  //Borde predeterminado de 2px
  @include bord.make-border-complete(map.get(variables.$borders, "2"), variables.$default-border-color,var(--sci-border-opacity));
}

.border-neon{
  &.border{
    border-color: color-mix(in srgb, var(--sci-border-color), white 20%) !important;
    @include neon.border-neon("");
  }
  @each $titulo, $posicion in variables.$standart-positions{
    &.border-#{$titulo}{
      @include neon.border-neon($titulo);
    }
  }
}

.border-neon-complete{
  @include neon.boder-neon-complete();
}

//Bordes redondeados
.rounded {
  @include bord.rounded-complete(variables.$default-border-radius);
}

@each $nombre, $grosor in variables.$borders {
  .border-#{$nombre} {
    --sci-border-opacity: 1;
    @include bord.make-border-complete($grosor, variables.$default-border-color, var(--sci-border-opacity));
  }
}

@each $nombre, $color in variables.$theme-colors {
  .border-#{$nombre} {
    --sci-border-opacity: 1;
    --sci-border-color: #{$color};
    @include bord.change-color($color,var(--sci-border-opacity));
  }
}

@each $nombre, $color in variables.$subtle-colors {
    .border-#{$nombre} {
      --sci-border-opacity: 1;
      --sci-border-color: #{$color};
      @include bord.change-color($color,var(--sci-border-opacity));
    }
}

@for $i from 1 through 4 {
  @if ($i == 1) {
    .border-opacity-10 {
      --sci-border-opacity: 0.1;
    }
  }
  .border-opacity-#{calc($i/4)*100} {
    --sci-border-opacity: #{calc($i/4)};
  }
}

@each $nombre, $borde in variables.$borders-radius {
  .rounded-#{$nombre} {
    @include bord.rounded-complete($borde);
  }
}

@each $nombre, $posicion in variables.$standart-positions {
  .border-#{$nombre} {
    @include bord.make-border(map.get(variables.$borders,"2"),var(--sci-border-color),$posicion);
  }

  .border-#{$nombre}-0 {
    @include bord.make-border(map.get(variables.$borders,"0"),var(--sci-border-color),$posicion)
  }

  .border-neon-#{$nombre}{
    @include neon.border-neon($posicion);
  }

  .rounded-#{$nombre}{
    @include bord.rounded(variables.$default-border-radius,$posicion);
  }

  @each $tipo, $radius in variables.$borders-radius{
    .rounded-#{$nombre}-#{$tipo}{
      @include bord.rounded($radius,$posicion);
    }
  }
}