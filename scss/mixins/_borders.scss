@use "../variables";
@use "sass:map";

@mixin make-border-complete($grosor, $color){
    border: $grosor solid $color;
}

@mixin make-border($grosor, $color, $position){
    border-#{map.get(variables.$positions,$position)}: $grosor solid $color;
}

@mixin change-color($color, $alpha){
    border-color: rgba($color, $alpha);
}

@mixin rounded-complete($radius){
    border-radius: $radius !important;
}

@mixin rounded($radius, $position){
    @if($position == "start"){
        border-top-left-radius: $radius;
        border-bottom-left-radius: $radius;
    }
    @else if($position == "end"){
        border-top-right-radius: $radius;
        border-bottom-right-radius: $radius;
    }
    @else if($position == "top"){
        border-top-left-radius: $radius;
        border-top-right-radius: $radius;
    }
    @else if($position == "bottom"){
        border-bottom-left-radius: $radius;
        border-bottom-right-radius: $radius;
    }
}

@mixin border-r($padding: 3px) {
    display: block;
    cursor: pointer; // cursor opcional pero queda bien 
    position: relative;
    overflow: hidden;
    padding: $padding; // la cantidad de borde que se va ver 3px

    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 400%;
        height: 100%;
        background: linear-gradient(115deg, #4fcf70, #fad648, #a767e5, #12bcfe, #44ce7b);
        background-size: 25% 100%;
        animation: border-animation 0.75s linear infinite;
        animation-play-state: paused;
        translate: -5% 0%;
        transition: translate 0.25s ease-out;
    }

    &:hover::before,
    &.active::before {
        animation-play-state: running;
        transition-duration: 0.75s;
        translate: 0% 0%;
    }

    >span{
        position: relative;
        display: block;
        border-radius: 3px;
        height: 100%;
    }
}

@keyframes border-animation {
    to {
        transform: translateX(-25%);
    }
}